[project]
name = "darts-nextgen"
dynamic = ["version"]
description = "Panarctic Database of Active Layer Detachment Slides and Retrogressive Thaw Slumps from Deep Learning on High Resolution Satellite Imagery."
dependencies = [
    # General & Utils
    "rich>=13.9.2",
    "cyclopts>=3.1.0",
    "lovely-numpy>=0.2.13",
    "setuptools>=75.5.0",
    "stopuhr>=0.0.9",
    "names-generator>=0.2.0",
    # IO
    "boto3>=1.37.7",
    "h5netcdf>=1.3.0",
    "rasterio>=1.4.0",
    "rioxarray>=0.17.0",
    "geopandas>=1.0.1",
    "shapely>=2.0.0",
    "earthengine-api>=1.1.5",
    "xee>=0.0.20",
    "pystac>=1.12.1",
    "xpystac>=0.1.3",
    "pystac-client>=0.8.6",
    "odc-geo>=0.4.8",
    "odc-stac[botocore]>=0.3.10",
    "smart-geocubes[stac,gee]>=0.0.8",
    "toml>=0.10.2",
    "zarr>=3.0.8",
    # Processing
    "albumentations>=1.4.21",
    "scikit-image>=0.20",
    "scipy>=1.14.1",
    "xarray-spatial>=0.4.0",
    "dask>=2024.11.0,<2025.3.0",
    "distributed>=2024.12.0",
    "geocube>=0.7.0",
    "numpy>=1.26.3, <2",
    "xarray>=2024.9.0",
    "ray[data]>=2.37.0",
    # Visualization
    "cartopy>=0.24.1",
    "hvplot>=0.11.1",
    "geoviews>=1.13.0",
    "datashader>=0.16.3",
    "folium>=0.18.0",
    "bokeh>=3.5.2",
    "jupyter-bokeh>=4.0.5",
    "seaborn>=0.13.2",
    # Workspace
    "darts-acquisition",
    "darts-ensemble",
    "darts-export",
    "darts-postprocessing",
    "darts-preprocessing",
    "darts-segmentation",
    "darts-superresolution",
    "darts-utils",
    "filelock>=3.18.0",
]
readme = "README.md"
requires-python = ">= 3.11, < 3.13"
authors = [
    { name = "Ingmar Nitze", email = "ingmar.nitze@awi.de" },
    { name = "Konrad Heidler", email = "k.heidler@tum.de" },
    { name = "Jonas Küpper", email = "jonas.kuepper@awi.de" },
    { name = "Tobias Hölzer", email = "tobias.hoelzer@awi.de" },
    { name = "Lucas von Chamier", email = "lucas.chamier@awi.de" }
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]


[project.urls]
Documentation = "https://awi-response.github.io/darts-nextgen/latest/"
Repository = "https://github.com/awi-response/darts-nextgen"
Issues = "https://github.com/awi-response/darts-nextgen/issues"


# We need to move all torch-dependent packages to the optional-dependencies section
# to ensure that they use the correct version of torch.
# I opened an issue about this topic: https://github.com/astral-sh/uv/issues/12290
[project.optional-dependencies]
torchdeps = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "segmentation-models-pytorch>=0.4.0",
    "lovely-tensors>=0.1.17",
    "timm>=1.0.13",
]
cuda11deps = [
    "cucim-cu11>=24.8",
    "cupy-cuda11x>=13.3.0",
    "cupy-xarray",
    "cuda-python>=12.6.2.post1",
    "pynvml==11.4.1",
]
cuda12deps = [
    "cucim-cu12>=24.8",
    "cupy-cuda12x>=13.3.0",
    "cupy-xarray",
    "cuda-python>=12.6.2.post1",
    "pynvml==11.4.1",
]
cpu = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps]"
]
cuda118 = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps, cuda11deps]"
]
cuda121 = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps, cuda12deps]"
]
cuda124 = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps, cuda12deps]"
]
cuda126 = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps, cuda12deps]"
]
cuda128 = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "darts-nextgen[torchdeps, cuda12deps]"
]
training = [
    "lightning>=2.4.0",
    "psycopg2-binary>=2.9.10",
    "torchmetrics>=1.6.0",
    "wandb>=0.18.7",
    "optuna>=4.1.0",
]

[project.scripts]
darts = "darts.cli:start_app"

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.2",
    "ruff>=0.8.3",
    "pyright>=1.1.384",
    "pytest>=8",
    "ipywidgets>=8.1.5",
    "folium>=0.17.0",
    "mapclassify>=2.8.1",
    "nbconvert>=7.16.6",
    "pyperclip>=1.9.0",
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material[imaging]>=9.5.38",
    "mike>=2.1.3",
    "mkdocstrings[python]>=0.26.1",
    "mkdocs-git-revision-date-localized-plugin>=1.2.9",
    "mkdocs-git-committers-plugin-2>=2.3.0",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-api-autonav>=0.2.1",
]

# ==============================================================================
# Build System Configuration
# ==============================================================================
[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.wheel]
packages = ["darts/src/darts"]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"

# ==============================================================================
# uv Configuration
# ==============================================================================

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cuda118" },
    { extra = "cuda121" },
    { extra = "cuda124" },
    { extra = "cuda126" },
    { extra = "cuda128" },
  ],
]

[tool.uv.sources]
cupy-xarray = { git = "https://github.com/xarray-contrib/cupy-xarray", branch = "main" }
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cuda118" },
  { index = "pytorch-cu121", extra = "cuda121" },
  { index = "pytorch-cu124", extra = "cuda124" },
  { index = "pytorch-cu126", extra = "cuda126" },
  { index = "pytorch-cu128", extra = "cuda128" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cuda118" },
  { index = "pytorch-cu121", extra = "cuda121" },
  { index = "pytorch-cu124", extra = "cuda124" },
  { index = "pytorch-cu126", extra = "cuda126" },
  { index = "pytorch-cu128", extra = "cuda128" },
]
darts-acquisition = { workspace = true }
darts-ensemble = { workspace = true }
darts-export = { workspace = true }
darts-postprocessing = { workspace = true }
darts-preprocessing = { workspace = true }
darts-segmentation = { workspace = true }
darts-superresolution = { workspace = true }
darts-utils = { workspace = true }

# Possible versions to support in general: 11.8, 12.1, 12.4, 12.6, 12.8
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.uv.workspace]
members = ["darts-*"]

# ==============================================================================
# Pixi Configuration
# ==============================================================================

# Currently this does not work!
# Pixi is not meant to be used alongside uv, instead it expects to be used as the main tool
# which uses uv under the hood.
# Hence, stuff like uv-workspaces or uv-extras and uv-groups do not work as one would expect.
# Until things are changed, use the pixi.toml file instead of this section.
# [tool.pixi.workspace]
# channels = ["conda-forge"]
# platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]
#
# [tool.pixi.dependencies]
# google-cloud-sdk = ">=525.0.0,<526" # Is not available for windows...
# uv = ">=0.7.12,<0.8"
#
# [tool.pixi.pypi-dependencies]
# darts-nextgen = { path = ".", editable = true }
#
# [tool.pixi.feature.cuda118]
# channels = ["nvidia", "conda-forge"]
# platforms = ["linux-64", "win-64"]
# dependencies = { cuda = {version = "11.8.*", channel = "nvidia"} }
#
# [tool.pixi.feature.cuda121]
# channels = ["nvidia", "conda-forge"]
# platforms = ["linux-64", "win-64"]
# dependencies = { cuda = {version = "12.1.*", channel = "nvidia"} }
#
# [tool.pixi.feature.cuda126]
# channels = ["nvidia", "conda-forge"]
# platforms = ["linux-64", "win-64"]
# dependencies = { cuda = {version = "12.6.*", channel = "nvidia"} }
#
# [tool.pixi.environments]
# default = { solve-group = "default" }
# cpu = { features = ["cpu"], solve-group = "default" }
# cuda118 = { features = ["cuda118"], solve-group = "cuda118" }
# cuda121 = { features = ["cuda121"], solve-group = "cuda121" }
# cuda126 = { features = ["cuda126"], solve-group = "cuda126" }
# dev = { features = ["dev"], solve-group = "default" }
# docs = { features = ["docs"], solve-group = "default" }
# training = { features = ["training"], solve-group = "default" }
#
# [tool.pixi.tasks]
# darts = { cmd = "uv run darts" }

# ==============================================================================
# Ruff Configuration
# ==============================================================================
[tool.ruff]
line-length = 120
indent-width = 4  # This is the default

[tool.ruff.lint]
# Default selected Rules are F, E4, E7 and E9 (all stable)
# We also enable preview Rules from E
# See https://docs.astral.sh/ruff/rules/ which rules do what
# F: Pyflakes
# E, W: Pycodestyle
# C: McCabe (code complexity)
# I: isort (import sorting)
# N: pip8-naming (naming conventions)
# D: pydocstyle (docstring formatting) <- this should help us to write documentation
# UP: pyupgrade <- this should help writing up-to-date code
# FLY: flynt <- write f-strings
# NPY: numpy <- this should help writing better numpy code
# FURB: refurb <- this should help writing up-to-date code
# DOC: pydoclint <- this should help writing better docstrings
# RUF: ruff
preview = true
select = ["F", "E", "W", "C", "I", "N", "D", "UP", "FLY", "NPY", "FURB", "DOC", "RUF"]


# Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{test,tests,docs,tools}/*" = ["E402", "D1"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["test_*"]

[tool.ruff.lint.pyflakes]
allowed-unused-imports = ["hvplot.pandas", "hvplot.xarray", "rioxarray", "odc.geo.xr"]
