[project]
name = "darts-nextgen"
version = "0.3.2"
description = "Panarctic Database of Active Layer Detachment Slides and Retrogressive Thaw Slumps from Deep Learning on High Resolution Satellite Imagery."
dependencies = [
    # General
    "numpy>=1.26.3, <2",
    "xarray>=2024.9.0",
    "ray[data]>=2.37.0",
    "rich>=13.9.2",
    "cyclopts>=3.1.0",
    # Utils
    "lovely-tensors>=0.1.17",
    "lovely-numpy>=0.2.13",
    # IO
    "h5netcdf>=1.3.0",
    "rasterio>=1.4.0",
    "rioxarray>=0.17.0",
    "geopandas>=1.0.1",
    "shapely>=2.0.0",
    "earthengine-api>=1.1.5",
    "xee>=0.0.19",
    "pystac>=1.11.0",
    "xpystac>=0.1.3",
    "odc-geo>=0.4.8",
    "odc-stac[botocore]>=0.3.10",
    "toml>=0.10.2",
    "zarr[jupyter]>=2.18.3",
    # Training and Inference
    "segmentation-models-pytorch>=0.3.4",
    # Processing
    "scikit-image>=0.20",
    "scipy>=1.14.1",
    "xarray-spatial>=0.4.0",
    "dask>=2024.11.0",
    "geocube>=0.7.0",
    # Visualization
    "cartopy>=0.24.1",
    "hvplot>=0.11.1",
    "geoviews>=1.13.0",
    "datashader>=0.16.3",
    "folium>=0.18.0",
    "bokeh>=3.5.2",
    "jupyter-bokeh>=4.0.5",
    "setuptools>=75.5.0",
    "lightning>=2.4.0",
    "albumentations>=1.4.21",
    "wandb>=0.18.7",
    "torchmetrics>=1.6.0",
]
readme = "README.md"
requires-python = ">= 3.11"
authors = [
    { name = "Ingmar Nitze", email = "ingmar.nitze@awi.de" },
    { name = "Konrad Heidler", email = "k.heidler@tum.de" },
    { name = "Jonas Küpper", email = "jonas.kuepper@awi.de" },
    { name = "Tobias Hölzer", email = "tobias.hoelzer@awi.de" },
    { name = "Lucas von Chamier", email = "lucas.chamier@awi.de" }
]

[project.optional-dependencies]
cpu = ["torch==2.2.0+cpu", "torchvision==0.17.0+cpu"]
cuda11 = [
    "torch==2.2.0+cu118",
    "torchvision==0.17.0+cu118",
    "cucim-cu11>=24.8.0",
    "cupy-cuda11x>=13.3.0",
    "cupy-xarray @ git+https://github.com/xarray-contrib/cupy-xarray",
    "cuda-python>=12.6.2.post1",
    "pynvml==11.4.1",
]
cuda12 = [
    "torch==2.2.0+cu121",
    "torchvision==0.17.0+cu121",
    "cucim-cu12==24.8.*",
    "cupy-cuda12x>=13.3.0",
    "cupy-xarray @ git+https://github.com/xarray-contrib/cupy-xarray",
    "cuda-python>=12.6.2.post1",
    "pynvml==11.4.1",
]
gdal393 = ["gdal==3.9.3"]
gdal39 = ["gdal==3.9.2"]
gdal38 = ["gdal==3.8.5"]
gdal384 = ["gdal==3.8.4"]
gdal37 = ["gdal==3.7.3"]
gdal36 = ["gdal==3.6.4"]
gdal384_win64 = ["gdal @ https://github.com/cgohlke/geospatial-wheels/releases/download/v2024.2.18/GDAL-3.8.4-cp311-cp311-win_amd64.whl"]

[project.scripts]
darts = "darts.cli:start_app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["darts/src/darts"]

[tool.rye]
managed = true
dev-dependencies = [
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.2",
    "ruff>=0.6.8",
    "mkdocs>=1.6.1",
    "mkdocs-material[imaging]>=9.5.38",
    "mike>=2.1.3",
    "mkdocstrings[python]>=0.26.1",
    "mkdocs-git-revision-date-localized-plugin>=1.2.9",
    "mkdocs-git-committers-plugin-2>=2.3.0",
    "pyright>=1.1.384",
    "pytest>=8",
    "ipywidgets>=8.1.5",
    "folium>=0.17.0",
    "mapclassify>=2.8.1",
]

[tool.rye.workspace]
members = ["darts-*"]

[[tool.rye.sources]]
name = "nvidia"
url = "https://pypi.nvidia.com"

[[tool.rye.sources]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"

[[tool.rye.sources]]
name = "pytorch-cu11"
url = "https://download.pytorch.org/whl/cu118"

[[tool.rye.sources]]
name = "pytorch-cu12"
url = "https://download.pytorch.org/whl/cu121"

[tool.ruff]
line-length = 120
indent-width = 4  # This is the default

[tool.ruff.lint]
# Default selected Rules are F, E4, E7 and E9 (all stable)
# We also enable preview Rules from E
# See https://docs.astral.sh/ruff/rules/ which rules do what
# F: Pyflakes
# E, W: Pycodestyle
# C: McCabe (code complexity)
# I: isort (import sorting)
# N: pip8-naming (naming conventions)
# D: pydocstyle (docstring formatting) <- this should help us to write documentation
# UP: pyupgrade <- this should help writing up-to-date code
# PD: pandas-vet <- this should help writing better pandas code
# FLY: flynt <- write f-strings
# NPY: numpy <- this should help writing better numpy code
# FURB: refurb <- this should help writing up-to-date code
# DOC: pydoclint <- this should help writing better docstrings
# RUF: ruff
preview = true
select = ["F", "E", "W", "C", "I", "N", "D", "UP", "PD", "FLY", "NPY", "FURB", "DOC", "RUF"]


# Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{test,tests,docs,tools}/*" = ["E402", "D1"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["test_*"]
