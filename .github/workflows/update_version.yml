name: Update Version

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'The version bump to apply [possible values: major, minor, patch]'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      publish:
        description: 'Publish the package to GitHub releases'
        required: false
        type: boolean
        default: true

jobs:
  update-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      VERSION: ${{ steps.update_version.outputs.tag-number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Do a version bump on the package
      - name: Update version by bumping git tag
        id: update_version
        uses: leonsteinhaeuser/git-tag-bump@v1.1.0
        with:
          args: >-
            --bump ${{ github.event.inputs.bump }} --v-prefix --create --actor-name "GitHub Actions" --actor-mail "github-actions[bot]@users.noreply.github.com"

  build-and-publish:
    runs-on: ubuntu-latest
    needs:
      - update-version
    permissions:
      contents: write
      id-token: write

    if: github.event.inputs.publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.7"

      - name: "Set up Python"
        uses: actions/setup-python@v5 # Uses python version from .python-version -> important for uv

      - name: Build package
        run: uv build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.update-version.outputs.VERSION }}
          release_name: Release ${{ needs.update-version.outputs.VERSION }}
          draft: false
          prerelease: false

      # TODO: Setup PyPI publishing
      # - name: Publish to PyPI
      #   run: uv publish --trusted-publishing always

  build-and-publish-docs:
    runs-on: ubuntu-latest
    needs:
      - update-version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Setup Python
        uses: actions/setup-python@v5  # Uses python version from .python-version

      - name: Get cache id
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material

      - name: Install dependencies
        run: |
          pip install "mkdocs-material[imaging]>=9.5.38" "mkdocstrings[python]>=0.26.1" "mike>=2.1.3" "mkdocs-git-revision-date-localized-plugin>=1.2.9" "mkdocs-git-committers-plugin-2>=2.3.0" "mkdocs-glightbox>=0.4.0"

      - name: Publish documentation
        run: mike deploy --push --update-aliases ${{ needs.update-version.outputs.VERSION }} latest
